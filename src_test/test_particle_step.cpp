#include "layer.hpp"
#include <signal.h>
#include <stdio.h>

#define SOME_SEED 922987996

int main(int argc, char const *argv[]) {

  const real_t x_min = 0.0;
  const real_t x_max = 1.0;
  const real_t x_ini = sqrt(2.) / 2;
  const int world_size = 10;
  const int world_rank = 7;
  const int cells_per_layer = 100;
  const int nb_particles = 1;
  const real_t particle_min_weight = 1e-7;
  const real_t x_should[93] = {
      0.70710676908493042, 0.70800018310546875, 0.70900017023086548,
      0.71000021696090698, 0.71100020408630371, 0.71200019121170044,
      0.71300017833709717, 0.71400022506713867, 0.71500021219253540,
      0.71600019931793213, 0.71700018644332886, 0.71800017356872559,
      0.71900022029876709, 0.72000020742416382, 0.72100019454956055,
      0.72200018167495728, 0.72300022840499878, 0.72400021553039551,
      0.72500020265579224, 0.72600018978118896, 0.72700017690658569,
      0.72800022363662720, 0.72900021076202393, 0.73000019788742065,
      0.73100018501281738, 0.73200023174285889, 0.73300021886825562,
      0.73400020599365234, 0.73500019311904907, 0.73600018024444580,
      0.73700022697448730, 0.73800021409988403, 0.73900020122528076,
      0.74000018835067749, 0.74100023508071899, 0.74200022220611572,
      0.74300020933151245, 0.74400019645690918, 0.74500018358230591,
      0.74600023031234741, 0.74700021743774414, 0.74800020456314087,
      0.74900019168853760, 0.75000023841857910, 0.75100022554397583,
      0.75200021266937256, 0.75300019979476929, 0.75400018692016602,
      0.75500023365020752, 0.75600022077560425, 0.75700020790100098,
      0.75800019502639771, 0.75900024175643921, 0.76000022888183594,
      0.76100021600723267, 0.76200020313262939, 0.76300019025802612,
      0.76400023698806763, 0.76500022411346436, 0.76600021123886108,
      0.76700019836425781, 0.76800024509429932, 0.76900023221969604,
      0.77000021934509277, 0.77100020647048950, 0.77200019359588623,
      0.77300024032592773, 0.77400022745132446, 0.77500021457672119,
      0.77600020170211792, 0.77700018882751465, 0.77800023555755615,
      0.77900022268295288, 0.78000020980834961, 0.78100019693374634,
      0.78200024366378784, 0.78300023078918457, 0.78400021791458130,
      0.78500020503997803, 0.78600019216537476, 0.78700023889541626,
      0.78800022602081299, 0.78900021314620972, 0.79000020027160645,
      0.79100024700164795, 0.79200023412704468, 0.79300022125244141,
      0.79400020837783813, 0.79500019550323486, 0.79600024223327637,
      0.79700022935867310, 0.79800021648406982, 0.79900020360946655};
  UnifDist dist(SOME_SEED);
  Layer layer(decompose_domain(dist, x_min, x_max, x_ini, world_size,
                               world_rank, cells_per_layer, nb_particles,
                               particle_min_weight));

  int new_index = layer.particles.back().index;

  int l = 0;
  while (new_index >= layer.index_start &&
         new_index < layer.index_start + layer.m) {
    if (layer.particles.back().x != x_should[l]) {
      abort();
    }
    new_index = layer.particle_step(dist, layer.particles.back());
    l++;
  }

  if (l != 93) {
    abort();
  }

  printf("CORRECT\n");
  return 0;
}